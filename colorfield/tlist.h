/* *  James Grandy *  Colorfield Digital Media Inc. * *  Copyright (c) 2001 Colorfield Digital Media Inc. *  Copyright (c) 2014 James Grandy * *  Permission is hereby granted, free of charge, to any person obtaining *  a copy of this software and associated documentation files (the "Software"), *  to deal in the Software without restriction, including without limitation *  the rights to use, copy, modify, merge, publish, distribute, sublicense, *  and/or sell copies of the Software, and to permit persons to whom the Software *  is furnished to do so, subject to the following conditions: * *  The above copyright notice and this permission notice shall be included in *  all copies or substantial portions of the Software. * *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, *  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN *  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. */#ifndef __TLIST_H#define __TLIST_H#include "cf-libcpp.h"#include <cstddef>namespace tlist {class empty_tlist {public:static		  const std::size_t			length_ = 0;};template<typename Head, class Tail = empty_tlist> class tpair {public:			// ctassert: Tail should be pair<> or empty_list			typedef Head head_t;			typedef Tail tail_t;static		  const std::size_t			length_ = 1 + tail_t::length_;};template<class First, class Second> class tappend;template<typename Head, class Tail, class Second> class tappend<tpair<Head, Tail>, Second> {public:			typedef tpair<Head,tappend<Tail,Second>::type> type;};template<class Second>class tappend<empty_tlist, Second> {public:			typedef Second type;};} // namespace tlist#endif /* __TLIST_H */