/* *  James Grandy *  Colorfield Digital Media Inc. * *  Copyright (c) 2000 Colorfield Digital Media Inc. *  Copyright (c) 2014 James Grandy * *  Permission is hereby granted, free of charge, to any person obtaining *  a copy of this software and associated documentation files (the "Software"), *  to deal in the Software without restriction, including without limitation *  the rights to use, copy, modify, merge, publish, distribute, sublicense, *  and/or sell copies of the Software, and to permit persons to whom the Software *  is furnished to do so, subject to the following conditions: * *  The above copyright notice and this permission notice shall be included in *  all copies or substantial portions of the Software. * *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, *  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN *  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. */#include "colorfield.h"#include <exception>namespace colorfield {/*1.				2.						3.*/template<typename T, T Null = 0> class simple_exception : public exception {public:		typedef simple_exception<T>		this_t;		typedef exception				base_t;		static			void					throw_if(const T &t) throw(this_t);	    								simple_exception(const T &ec) throw() 			: err_(ec), base_t() {}	    								simple_exception(const this_t &exc) throw()		: base_t(exc) {}	    		this_t&					operator= (const this_t &exc) throw()			{ return *this; }virtual									~simple_exception(void) throw()					{}				T						get_code(void) const throw()					{ return err; }private:				T						err_;		  }; // simple_exception} // namespace colorfield