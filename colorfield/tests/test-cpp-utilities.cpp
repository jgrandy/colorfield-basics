/* *  James Grandy *  Colorfield Digital Media Inc. * *  Copyright (c) 1999 Colorfield Digital Media Inc. *  Copyright (c) 2014 James Grandy * *  Permission is hereby granted, free of charge, to any person obtaining *  a copy of this software and associated documentation files (the "Software"), *  to deal in the Software without restriction, including without limitation *  the rights to use, copy, modify, merge, publish, distribute, sublicense, *  and/or sell copies of the Software, and to permit persons to whom the Software *  is furnished to do so, subject to the following conditions: * *  The above copyright notice and this permission notice shall be included in *  all copies or substantial portions of the Software. * *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, *  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN *  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. */#pragma warn_notinlined off#include <iostream>using std::clog;using std::endl;using std::exception;void test_comp(void);void test_coord(void);void test_ccoord(void);void test_range(void);void test_crange(void);void test_block(void);void test_cblock(void);void test_generic_iterators(void);static void test_it(void(*f)(void), const char *it){	clog << "testing " << it << endl;	try {		f();	} catch (exception &exc) {		clog << "...failed: " << exc.what();	} catch (...) {		clog << "...failed";	}	clog << endl;}		int test_cpp_utils(){    clog << "testing cpp utils" << endl;    	test_it(test_comp,   "index_t");	test_it(test_coord,  "coord_t");	test_it(test_ccoord, "ccoord_t");	test_it(test_range,  "range_t");	test_it(test_crange, "crange_t");	test_it(test_block,  "block_t");	test_it(test_cblock, "cblock_t");	test_it(test_generic_iterators, "generic iterators");		clog << "done." << endl << endl;	return 0;}