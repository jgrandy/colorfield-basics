/* *  James Grandy *  Colorfield Digital Media Inc. * *  Copyright (c) 1999 Colorfield Digital Media Inc. *  Copyright (c) 2014 James Grandy * *  Permission is hereby granted, free of charge, to any person obtaining *  a copy of this software and associated documentation files (the "Software"), *  to deal in the Software without restriction, including without limitation *  the rights to use, copy, modify, merge, publish, distribute, sublicense, *  and/or sell copies of the Software, and to permit persons to whom the Software *  is furnished to do so, subject to the following conditions: * *  The above copyright notice and this permission notice shall be included in *  all copies or substantial portions of the Software. * *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, *  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN *  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. */#ifndef __MATRIX_EXCEPTIONS_H#define __MATRIX_EXCEPTIONS_H#include "algebra-core.h"#include "matrix.h"#include <stdexcept>namespace cf_algebra {class matrix_size_mismatch : public std::domain_error {public :    matrix_size_mismatch (const std::string& what_arg) : std::domain_error (what_arg) { }};class matrix_not_positive_definite : public std::domain_error {public :    matrix_not_positive_definite (const std::string& what_arg) : std::domain_error (what_arg) { }};class matrix_not_symmetric : public std::domain_error {public :    matrix_not_symmetric (const std::string& what_arg) : std::domain_error (what_arg) { }};class matrix_element_is_read_only : public std::domain_error {public :    matrix_element_is_read_only (const std::string& what_arg) : std::domain_error (what_arg) { }};class matrix_op_not_implemented : public std::invalid_argument {public :    matrix_op_not_implemented (const std::string& what_arg) : std::invalid_argument (what_arg) { }};class matrix_invalid : public std::domain_error {public :    matrix_invalid (const std::string& what_arg) : std::domain_error (what_arg) { }};} /* namespace cf_algebra */#endif /* __MATRIX_EXCEPTIONS_H */