/* *  James Grandy *  Colorfield Digital Media Inc. * *  Copyright (c) 2000 Colorfield Digital Media Inc. *  Copyright (c) 2014 James Grandy * *  Permission is hereby granted, free of charge, to any person obtaining *  a copy of this software and associated documentation files (the "Software"), *  to deal in the Software without restriction, including without limitation *  the rights to use, copy, modify, merge, publish, distribute, sublicense, *  and/or sell copies of the Software, and to permit persons to whom the Software *  is furnished to do so, subject to the following conditions: * *  The above copyright notice and this permission notice shall be included in *  all copies or substantial portions of the Software. * *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, *  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN *  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. */#ifndef __LU_DECOMP_H#define __LU_DECOMP_H#include "linear-solver.h"namespace cf_algebra {template<class A, class X, class B> class lu_decomp_solver : linear_solver<A,X,B> {public:			typedef lu_decomp_solver<A,X,B>	this_t;			typedef linear_solver<A,X,B>	base_t;			typedef typename base_t::A_t				A_t;			typedef typename base_t::x_t				x_t;			typedef typename base_t::b_t				b_t;			typedef typename base_t::size_t			size_t;			explicit					lu_decomp_solver(size_t n)	: base_t(n) {}virtual		void			solve(const A_t &a, x_t &x, const b_t &b);virtual		void			invert(A_t &m_inv, A_t &m);			scalar_t		decompose(index_t n, A_t &a, index_t row[]);			void			back_substitute(index_t n, const A_t &a, const index_t perm[], b_t &b);};} /* namespace cf_lu_decomp */#endif /* __LU_DECOMP_H */